/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestChainLinkOracleSource,
  TestChainLinkOracleSourceInterface,
} from "../TestChainLinkOracleSource";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "expirationBlock",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundID",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundID",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261520860005534801561001657600080fd5b5061064d806100266000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639a6fc8f51161005b5780639a6fc8f514610117578063a035b1fe1461014b578063f7a3080614610169578063feaf968c1461018557610088565b8063313ce5671461008d57806354fd4d50146100ab5780637284e416146100c9578063775a8f5e146100e7575b600080fd5b6100956101a7565b6040516100a291906104d0565b60405180910390f35b6100b36101ac565b6040516100c09190610462565b60405180910390f35b6100d16101b1565b6040516100de9190610440565b60405180910390f35b61010160048036038101906100fc91906102fb565b6101b6565b60405161010e9190610403565b60405180910390f35b610131600480360381019061012c9190610328565b610213565b60405161014295949392919061047d565b60405180910390f35b610153610255565b6040516101609190610425565b60405180910390f35b610183600480360381019061017e91906102ce565b61025b565b005b61018d610265565b60405161019e95949392919061047d565b60405180910390f35b600090565b600090565b606090565b6060602067ffffffffffffffff8111156101d3576101d261058d565b5b6040519080825280601f01601f1916602001820160405280156102055781602001600182028036833780820191505090505b509050816020820152919050565b600080600080600085848769ffffffffffffffffffff168869ffffffffffffffffffff1689809550819650829750839850849950505050505091939590929450565b60005481565b8060008190555050565b60008060008060004360005443434380955081965082975083985084995050505050509091929394565b60008135905061029e816105d2565b92915050565b6000813590506102b3816105e9565b92915050565b6000813590506102c881610600565b92915050565b6000602082840312156102e4576102e36105bc565b5b60006102f28482850161028f565b91505092915050565b600060208284031215610311576103106105bc565b5b600061031f848285016102a4565b91505092915050565b60006020828403121561033e5761033d6105bc565b5b600061034c848285016102b9565b91505092915050565b6000610360826104eb565b61036a8185610501565b935061037a81856020860161055a565b610383816105c1565b840191505092915050565b61039781610523565b82525050565b60006103a8826104f6565b6103b28185610512565b93506103c281856020860161055a565b6103cb816105c1565b840191505092915050565b6103df8161052d565b82525050565b6103ee81610544565b82525050565b6103fd81610537565b82525050565b6000602082019050818103600083015261041d8184610355565b905092915050565b600060208201905061043a600083018461038e565b92915050565b6000602082019050818103600083015261045a818461039d565b905092915050565b600060208201905061047760008301846103d6565b92915050565b600060a08201905061049260008301886103e5565b61049f602083018761038e565b6104ac60408301866103d6565b6104b960608301856103d6565b6104c660808301846103e5565b9695505050505050565b60006020820190506104e560008301846103f4565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b60005b8381101561057857808201518184015260208101905061055d565b83811115610587576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b6105db81610523565b81146105e657600080fd5b50565b6105f28161052d565b81146105fd57600080fd5b50565b61060981610544565b811461061457600080fd5b5056fea26469706673582212207028b9c8613d6cbd6d659bef3ea8386dbf7eac9253cf6717ca44a9234ace6b9b64736f6c63430008070033";

export class TestChainLinkOracleSource__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestChainLinkOracleSource> {
    return super.deploy(overrides || {}) as Promise<TestChainLinkOracleSource>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestChainLinkOracleSource {
    return super.attach(address) as TestChainLinkOracleSource;
  }
  connect(signer: Signer): TestChainLinkOracleSource__factory {
    return super.connect(signer) as TestChainLinkOracleSource__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestChainLinkOracleSourceInterface {
    return new utils.Interface(_abi) as TestChainLinkOracleSourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestChainLinkOracleSource {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestChainLinkOracleSource;
  }
}
