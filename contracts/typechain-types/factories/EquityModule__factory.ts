/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EquityModule, EquityModuleInterface } from "../EquityModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "partyTwoEquityData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplumentalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "acceptCounterEquity",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplumentalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "equityData",
        type: "bytes",
      },
    ],
    name: "acceptEquity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeParties",
    outputs: [
      {
        internalType: "address",
        name: "partyOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "partyTwo",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeWagerEquity",
    outputs: [
      {
        internalType: "enum WagerType",
        name: "style",
        type: "uint8",
      },
      {
        internalType: "address[2]",
        name: "ercContracts",
        type: "address[2]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "ids",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "parties",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "equityData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "settleEquity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "parties",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "equityData",
        type: "bytes",
      },
    ],
    name: "voidEquity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526380ac58cd60e01b6000806101000a81548163ffffffff021916908360e01c021790555034801561003457600080fd5b5061247d806100446000396000f3fe6080604052600436106100555760003560e01c80633a3988311461005a5780633b8e21e51461008a5780637b4e3876146100b35780637b69476b146100cf5780639adb76401461010f578063ea303f081461014d575b600080fd5b610074600480360381019061006f91906117cd565b61018a565b6040516100819190611e35565b60405180910390f35b34801561009657600080fd5b506100b160048036038101906100ac91906116ca565b6106b9565b005b6100cd60048036038101906100c89190611681565b6108f5565b005b3480156100db57600080fd5b506100f660048036038101906100f19190611681565b610cb7565b6040516101069493929190611d30565b60405180910390f35b34801561011b57600080fd5b5061013660048036038101906101319190611681565b610cf6565b604051610144929190611cb5565b60405180910390f35b34801561015957600080fd5b50610174600480360381019061016f9190611742565b610d1a565b6040516101819190611e57565b60405180910390f35b6101926110d6565b600080848060200190518101906101a99190611641565b915091506000806000806101c08860600151610cb7565b9350935093509350600073ffffffffffffffffffffffffffffffffffffffff16836000600281106101f4576101f3612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1614156102c757813414610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e90611db5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90611d95565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146105cc576000808773ffffffffffffffffffffffffffffffffffffffff16876040516024016103269190611e57565b6040516020818303038152906040527f081812fc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103b09190611c89565b6000604051808303816000865af19150503d80600081146103ed576040519150601f19603f3d011682016040523d82523d6000602084013e6103f2565b606091505b509150915081801561044257503073ffffffffffffffffffffffffffffffffffffffff168180602001905181019061042a91906115d4565b73ffffffffffffffffffffffffffffffffffffffff16145b610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890611df5565b60405180910390fd5b60008873ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900460e01b6040516024016104b89190611d15565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105429190611c89565b6000604051808303816000865af19150503d806000811461057f576040519150601f19603f3d011682016040523d82523d6000602084013e610584565b606091505b50509050806105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90611dd5565b60405180910390fd5b5050505b836040518060400160405280856000600281106105ec576105eb612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508360405180604001604052808560006002811061067257610671612201565b5b60200201518152602001898152506040516020016106939493929190611d30565b604051602081830303815290604052886060018190525087965050505050505092915050565b60008060006106c784610cb7565b509250925092506000806106da87610cf6565b91509150600073ffffffffffffffffffffffffffffffffffffffff168460006002811061070a57610709612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1614156108ec5760008273ffffffffffffffffffffffffffffffffffffffff168460405161075190611ca0565b60006040518083038185875af1925050503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50509050806107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90611d75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156108375750600180811115610822576108216121d2565b5b866001811115610835576108346121d2565b5b145b156108ea5760008273ffffffffffffffffffffffffffffffffffffffff168560405161086290611ca0565b60006040518083038185875af1925050503d806000811461089f576040519150601f19603f3d011682016040523d82523d6000602084013e6108a4565b606091505b50509050806108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611d75565b60405180910390fd5b505b505b50505050505050565b600080600061090384610cb7565b9350935093505081341461094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611db5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168360006002811061097857610977612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1614610cb157600080846000600281106109af576109ae612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff16836000600281106109de576109dd612201565b5b60200201516040516024016109f39190611e57565b6040516020818303038152906040527f081812fc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610a7d9190611c89565b6000604051808303816000865af19150503d8060008114610aba576040519150601f19603f3d011682016040523d82523d6000602084013e610abf565b606091505b5091509150818015610b0f57503073ffffffffffffffffffffffffffffffffffffffff1681806020019051810190610af791906115d4565b73ffffffffffffffffffffffffffffffffffffffff16145b610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4590611df5565b60405180910390fd5b600085600060028110610b6457610b63612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900460e01b604051602401610b9d9190611d15565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c279190611c89565b6000604051808303816000865af19150503d8060008114610c64576040519150601f19603f3d011682016040523d82523d6000602084013e610c69565b606091505b5050905080610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca490611dd5565b60405180910390fd5b5050505b50505050565b6000610cc1611184565b6000610ccb6111a6565b84806020019051810190610cdf9190611845565b809450819550829650839750505050509193509193565b60008082806020019051810190610d0d9190611601565b8092508193505050915091565b6000806000806000610d2b87610cb7565b93509350935093506000600180811115610d4857610d476121d2565b5b856001811115610d5b57610d5a6121d2565b5b14610d665782610d74565b600283610d739190611fa6565b5b9050600073ffffffffffffffffffffffffffffffffffffffff1684600060028110610da257610da1612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff161415610e755760008773ffffffffffffffffffffffffffffffffffffffff1682604051610de990611ca0565b60006040518083038185875af1925050503d8060008114610e26576040519150601f19603f3d011682016040523d82523d6000602084013e610e2b565b606091505b5050905080610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690611e15565b60405180910390fd5b506110c7565b600080610e818b610cf6565b9150915060008973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ec05782610ec2565b815b8a8b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f145786600060028110610f0a57610f09612201565b5b6020020151610f2e565b86600160028110610f2857610f27612201565b5b60200201515b604051602401610f4093929190611cde565b6040516020818303038152906040527f42842e0e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000878b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ffc576001610fff565b60005b60ff166002811061101357611012612201565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168260405161103c9190611c89565b6000604051808303816000865af19150503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b50509050806110c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b990611e15565b60405180910390fd5b505050505b80955050505050509392505050565b604051806101600160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001600060038111156111205761111f6121d2565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b60006111db6111d684611e97565b611e72565b905080828560208602820111156111f5576111f461226e565b5b60005b85811015611225578161120b88826112ed565b8452602084019350602083019250506001810190506111f8565b5050509392505050565b600061124261123d84611ebd565b611e72565b9050808285602086028201111561125c5761125b61226e565b5b60005b8581101561128c578161127288826115bf565b84526020840193506020830192505060018101905061125f565b5050509392505050565b60006112a96112a484611ee3565b611e72565b9050828152602081018484840111156112c5576112c4612273565b5b6112d0848285612130565b509392505050565b6000813590506112e7816123b4565b92915050565b6000815190506112fc816123b4565b92915050565b600081519050611311816123cb565b92915050565b600082601f83011261132c5761132b61225f565b5b60026113398482856111c8565b91505092915050565b600082601f8301126113575761135661225f565b5b600261136484828561122f565b91505092915050565b600082601f8301126113825761138161225f565b5b8135611392848260208601611296565b91505092915050565b6000813590506113aa816123e2565b92915050565b6000813590506113bf816123f9565b92915050565b6000813590506113d481612410565b92915050565b6000815190506113e981612420565b92915050565b6000610160828403121561140657611405612264565b5b611411610160611e72565b9050600082013567ffffffffffffffff81111561143157611430612269565b5b61143d8482850161136d565b600083015250602082013567ffffffffffffffff81111561146157611460612269565b5b61146d8482850161136d565b602083015250604082013567ffffffffffffffff81111561149157611490612269565b5b61149d8482850161136d565b604083015250606082013567ffffffffffffffff8111156114c1576114c0612269565b5b6114cd8482850161136d565b606083015250608082013567ffffffffffffffff8111156114f1576114f0612269565b5b6114fd8482850161136d565b60808301525060a082013567ffffffffffffffff81111561152157611520612269565b5b61152d8482850161136d565b60a08301525060c0611541848285016113c5565b60c08301525060e06115558482850161139b565b60e08301525061010061156a848285016113b0565b61010083015250610120611580848285016112d8565b6101208301525061014082013567ffffffffffffffff8111156115a6576115a5612269565b5b6115b28482850161136d565b6101408301525092915050565b6000815190506115ce81612430565b92915050565b6000602082840312156115ea576115e961227d565b5b60006115f884828501611302565b91505092915050565b600080604083850312156116185761161761227d565b5b600061162685828601611302565b925050602061163785828601611302565b9150509250929050565b600080604083850312156116585761165761227d565b5b600061166685828601611302565b9250506020611677858286016115bf565b9150509250929050565b6000602082840312156116975761169661227d565b5b600082013567ffffffffffffffff8111156116b5576116b4612278565b5b6116c18482850161136d565b91505092915050565b600080604083850312156116e1576116e061227d565b5b600083013567ffffffffffffffff8111156116ff576116fe612278565b5b61170b8582860161136d565b925050602083013567ffffffffffffffff81111561172c5761172b612278565b5b6117388582860161136d565b9150509250929050565b60008060006060848603121561175b5761175a61227d565b5b600084013567ffffffffffffffff81111561177957611778612278565b5b6117858682870161136d565b935050602084013567ffffffffffffffff8111156117a6576117a5612278565b5b6117b28682870161136d565b92505060406117c3868287016112d8565b9150509250925092565b600080604083850312156117e4576117e361227d565b5b600083013567ffffffffffffffff81111561180257611801612278565b5b61180e8582860161136d565b925050602083013567ffffffffffffffff81111561182f5761182e612278565b5b61183b858286016113ef565b9150509250929050565b60008060008060c0858703121561185f5761185e61227d565b5b600061186d878288016113da565b945050602061187e87828801611317565b935050606061188f878288016115bf565b92505060806118a087828801611342565b91505092959194509250565b60006118b883836118dc565b60208301905092915050565b60006118d08383611c6b565b60208301905092915050565b6118e581612000565b82525050565b6118f481612000565b82525050565b61190381611f28565b61190d8184611f63565b925061191882611f14565b8060005b8381101561194957815161193087826118ac565b965061193b83611f49565b92505060018101905061191c565b505050505050565b61195a81611f33565b6119648184611f6e565b925061196f82611f1e565b8060005b838110156119a057815161198787826118c4565b965061199283611f56565b925050600181019050611973565b505050505050565b6119b181612024565b82525050565b60006119c282611f3e565b6119cc8185611f79565b93506119dc81856020860161213f565b6119e581612282565b840191505092915050565b60006119fb82611f3e565b611a058185611f8a565b9350611a1581856020860161213f565b80840191505092915050565b611a2a816120c4565b82525050565b611a39816120d6565b82525050565b611a48816120e8565b82525050565b611a57816120fa565b82525050565b6000611a6a600283611f95565b9150611a7582612293565b602082019050919050565b6000611a8d600383611f95565b9150611a98826122bc565b602082019050919050565b6000611ab0600283611f95565b9150611abb826122e5565b602082019050919050565b6000611ad3600383611f95565b9150611ade8261230e565b602082019050919050565b6000611af6600083611f8a565b9150611b0182612337565b600082019050919050565b6000611b19600383611f95565b9150611b248261233a565b602082019050919050565b6000611b3c600383611f95565b9150611b4782612363565b602082019050919050565b6000610160830160008301518482036000860152611b7082826119b7565b91505060208301518482036020860152611b8a82826119b7565b91505060408301518482036040860152611ba482826119b7565b91505060608301518482036060860152611bbe82826119b7565b91505060808301518482036080860152611bd882826119b7565b91505060a083015184820360a0860152611bf282826119b7565b91505060c0830151611c0760c0860182611a3f565b5060e0830151611c1a60e0860182611a21565b50610100830151611c2f610100860182611a30565b50610120830151611c446101208601826118dc565b50610140830151848203610140860152611c5e82826119b7565b9150508091505092915050565b611c74816120ba565b82525050565b611c83816120ba565b82525050565b6000611c9582846119f0565b915081905092915050565b6000611cab82611ae9565b9150819050919050565b6000604082019050611cca60008301856118eb565b611cd760208301846118eb565b9392505050565b6000606082019050611cf360008301866118eb565b611d0060208301856118eb565b611d0d6040830184611c7a565b949350505050565b6000602082019050611d2a60008301846119a8565b92915050565b600060c082019050611d456000830187611a4e565b611d5260208301866118fa565b611d5f6060830185611c7a565b611d6c6080830184611951565b95945050505050565b60006020820190508181036000830152611d8e81611a5d565b9050919050565b60006020820190508181036000830152611dae81611a80565b9050919050565b60006020820190508181036000830152611dce81611aa3565b9050919050565b60006020820190508181036000830152611dee81611ac6565b9050919050565b60006020820190508181036000830152611e0e81611b0c565b9050919050565b60006020820190508181036000830152611e2e81611b2f565b9050919050565b60006020820190508181036000830152611e4f8184611b52565b905092915050565b6000602082019050611e6c6000830184611c7a565b92915050565b6000611e7c611e8d565b9050611e888282612172565b919050565b6000604051905090565b600067ffffffffffffffff821115611eb257611eb1612230565b5b602082029050919050565b600067ffffffffffffffff821115611ed857611ed7612230565b5b602082029050919050565b600067ffffffffffffffff821115611efe57611efd612230565b5b611f0782612282565b9050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611fb1826120ba565b9150611fbc836120ba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ff557611ff46121a3565b5b828202905092915050565b600061200b8261209a565b9050919050565b600061201d8261209a565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061205b82612000565b9050919050565b600061206d82612000565b9050919050565b60008190506120828261238c565b919050565b6000819050612095826123a0565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120cf8261210c565b9050919050565b60006120e18261210c565b9050919050565b60006120f382612074565b9050919050565b600061210582612087565b9050919050565b60006121178261211e565b9050919050565b60006121298261209a565b9050919050565b82818337600083830152505050565b60005b8381101561215d578082015181840152602081019050612142565b8381111561216c576000848401525b50505050565b61217b82612282565b810181811067ffffffffffffffff8211171561219a57612199612230565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5736000000000000000000000000000000000000000000000000000000000000600082015250565b7f5732310000000000000000000000000000000000000000000000000000000000600082015250565b7f5739000000000000000000000000000000000000000000000000000000000000600082015250565b7f5732320000000000000000000000000000000000000000000000000000000000600082015250565b50565b7f5732300000000000000000000000000000000000000000000000000000000000600082015250565b7f5731310000000000000000000000000000000000000000000000000000000000600082015250565b6004811061239d5761239c6121d2565b5b50565b600281106123b1576123b06121d2565b5b50565b6123bd81612000565b81146123c857600080fd5b50565b6123d481612012565b81146123df57600080fd5b50565b6123eb81612050565b81146123f657600080fd5b50565b61240281612062565b811461240d57600080fd5b50565b6004811061241d57600080fd5b50565b6002811061242d57600080fd5b50565b612439816120ba565b811461244457600080fd5b5056fea2646970667358221220be43576ae676515b179be3a912e3d05514891ea4cfe25f44153e67df5087272c64736f6c63430008070033";

export class EquityModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EquityModule> {
    return super.deploy(overrides || {}) as Promise<EquityModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EquityModule {
    return super.attach(address) as EquityModule;
  }
  connect(signer: Signer): EquityModule__factory {
    return super.connect(signer) as EquityModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EquityModuleInterface {
    return new utils.Interface(_abi) as EquityModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EquityModule {
    return new Contract(address, _abi, signerOrProvider) as EquityModule;
  }
}
