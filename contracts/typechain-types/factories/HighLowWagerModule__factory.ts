/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HighLowWagerModule,
  HighLowWagerModuleInterface,
} from "../HighLowWagerModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeHighLowWager",
    outputs: [
      {
        internalType: "uint256",
        name: "wagerDirection",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "initialPrice",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "wagerAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "wagerAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d73806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806348d4a73d1461003b578063ca7ddc311461006c575b600080fd5b61005560048036038101906100509190610724565b61009d565b6040516100639291906109db565b60405180910390f35b61008660048036038101906100819190610692565b61020b565b604051610094929190610a0b565b60405180910390f35b6100a561022f565b60008083610140015173ffffffffffffffffffffffffffffffffffffffff166316f6a3a1856040518263ffffffff1660e01b81526004016100e691906109b9565b600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013d91906106db565b9050808460e0018190525060008180602001905181019061015e919061076d565b9050600080866000015180602001905181019061017b9190610652565b9150915060008061018f896020015161020b565b915091506000806101a38b6040015161020b565b9150915060018414156101dd578683136101ca578a86995099505050505050505050610206565b8a85995099505050505050505050610206565b8681136101f7578a85995099505050505050505050610206565b8a869950995050505050505050505b915091565b60008082806020019051810190610222919061079a565b8092508193505050915091565b60405180610180016040528060608152602001606081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016000600381111561028757610286610c02565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60006102f76102f284610a59565b610a34565b90508281526020810184848401111561031357610312610c6f565b5b61031e848285610b8f565b509392505050565b600061033961033484610a59565b610a34565b90508281526020810184848401111561035557610354610c6f565b5b610360848285610b9e565b509392505050565b60008135905061037781610ca3565b92915050565b60008151905061038c81610cba565b92915050565b600082601f8301126103a7576103a6610c60565b5b81356103b78482602086016102e4565b91505092915050565b600082601f8301126103d5576103d4610c60565b5b81516103e5848260208601610326565b91505092915050565b6000813590506103fd81610cd1565b92915050565b60008135905061041281610ce8565b92915050565b60008135905061042781610cff565b92915050565b60008151905061043c81610d0f565b92915050565b6000610180828403121561045957610458610c65565b5b610464610180610a34565b9050600082013567ffffffffffffffff81111561048457610483610c6a565b5b61049084828501610392565b600083015250602082013567ffffffffffffffff8111156104b4576104b3610c6a565b5b6104c084828501610392565b602083015250604082013567ffffffffffffffff8111156104e4576104e3610c6a565b5b6104f084828501610392565b604083015250606061050484828501610628565b606083015250608082013567ffffffffffffffff81111561052857610527610c6a565b5b61053484828501610392565b60808301525060a082013567ffffffffffffffff81111561055857610557610c6a565b5b61056484828501610392565b60a08301525060c082013567ffffffffffffffff81111561058857610587610c6a565b5b61059484828501610392565b60c08301525060e082013567ffffffffffffffff8111156105b8576105b7610c6a565b5b6105c484828501610392565b60e0830152506101006105d984828501610418565b610100830152506101206105ef848285016103ee565b6101208301525061014061060584828501610403565b6101408301525061016061061b84828501610368565b6101608301525092915050565b60008135905061063781610d26565b92915050565b60008151905061064c81610d26565b92915050565b6000806040838503121561066957610668610c79565b5b60006106778582860161037d565b92505060206106888582860161037d565b9150509250929050565b6000602082840312156106a8576106a7610c79565b5b600082013567ffffffffffffffff8111156106c6576106c5610c74565b5b6106d284828501610392565b91505092915050565b6000602082840312156106f1576106f0610c79565b5b600082015167ffffffffffffffff81111561070f5761070e610c74565b5b61071b848285016103c0565b91505092915050565b60006020828403121561073a57610739610c79565b5b600082013567ffffffffffffffff81111561075857610757610c74565b5b61076484828501610442565b91505092915050565b60006020828403121561078357610782610c79565b5b60006107918482850161063d565b91505092915050565b600080604083850312156107b1576107b0610c79565b5b60006107bf8582860161063d565b92505060206107d08582860161042d565b9150509250929050565b6107e381610aa6565b82525050565b6107f281610aa6565b82525050565b600061080382610a8a565b61080d8185610a95565b935061081d818560208601610b9e565b61082681610c7e565b840191505092915050565b61083a81610b35565b82525050565b61084981610b47565b82525050565b61085881610b59565b82525050565b61086781610b01565b82525050565b600061018083016000830151848203600086015261088b82826107f8565b915050602083015184820360208601526108a582826107f8565b915050604083015184820360408601526108bf82826107f8565b91505060608301516108d4606086018261099b565b50608083015184820360808601526108ec82826107f8565b91505060a083015184820360a086015261090682826107f8565b91505060c083015184820360c086015261092082826107f8565b91505060e083015184820360e086015261093a82826107f8565b91505061010083015161095161010086018261084f565b50610120830151610966610120860182610831565b5061014083015161097b610140860182610840565b506101608301516109906101608601826107da565b508091505092915050565b6109a481610b2b565b82525050565b6109b381610b2b565b82525050565b600060208201905081810360008301526109d3818461086d565b905092915050565b600060408201905081810360008301526109f5818561086d565b9050610a0460208301846107e9565b9392505050565b6000604082019050610a2060008301856109aa565b610a2d602083018461085e565b9392505050565b6000610a3e610a4f565b9050610a4a8282610bd1565b919050565b6000604051905090565b600067ffffffffffffffff821115610a7457610a73610c31565b5b610a7d82610c7e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610ab182610b0b565b9050919050565b6000610ac382610b0b565b9050919050565b6000610ad582610aa6565b9050919050565b6000610ae782610aa6565b9050919050565b6000819050610afc82610c8f565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b4082610b6b565b9050919050565b6000610b5282610b6b565b9050919050565b6000610b6482610aee565b9050919050565b6000610b7682610b7d565b9050919050565b6000610b8882610b0b565b9050919050565b82818337600083830152505050565b60005b83811015610bbc578082015181840152602081019050610ba1565b83811115610bcb576000848401525b50505050565b610bda82610c7e565b810181811067ffffffffffffffff82111715610bf957610bf8610c31565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110610ca057610c9f610c02565b5b50565b610cac81610aa6565b8114610cb757600080fd5b50565b610cc381610ab8565b8114610cce57600080fd5b50565b610cda81610aca565b8114610ce557600080fd5b50565b610cf181610adc565b8114610cfc57600080fd5b50565b60048110610d0c57600080fd5b50565b610d1881610b01565b8114610d2357600080fd5b50565b610d2f81610b2b565b8114610d3a57600080fd5b5056fea26469706673582212208f8ffbdfbb59356e952b0f3f6f8a63bdacff33e43420480c54bcdc842732b56c64736f6c63430008070033";

export class HighLowWagerModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HighLowWagerModule> {
    return super.deploy(overrides || {}) as Promise<HighLowWagerModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HighLowWagerModule {
    return super.attach(address) as HighLowWagerModule;
  }
  connect(signer: Signer): HighLowWagerModule__factory {
    return super.connect(signer) as HighLowWagerModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HighLowWagerModuleInterface {
    return new utils.Interface(_abi) as HighLowWagerModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HighLowWagerModule {
    return new Contract(address, _abi, signerOrProvider) as HighLowWagerModule;
  }
}
