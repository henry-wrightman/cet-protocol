/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HighLowWagerModule,
  HighLowWagerModuleInterface,
} from "../HighLowWagerModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeHighLowWager",
    outputs: [
      {
        internalType: "uint256",
        name: "wagerDirection",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "initialPrice",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d72806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806394d3ced71461003b578063ca7ddc311461006c575b600080fd5b6100556004803603810190610050919061072b565b61009d565b6040516100639291906109da565b60405180910390f35b61008660048036038101906100819190610699565b61020b565b604051610094929190610a0a565b60405180910390f35b6100a561022f565b60008083610140015173ffffffffffffffffffffffffffffffffffffffff1663a03f85c7856040518263ffffffff1660e01b81526004016100e691906109b8565b600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013d91906106e2565b9050808460e0018190525060008180602001905181019061015e9190610774565b9050600080866000015180602001905181019061017b9190610659565b9150915060008061018f896020015161020b565b915091506000806101a38b6040015161020b565b9150915060018414156101dd578683136101ca578a86995099505050505050505050610206565b8a85995099505050505050505050610206565b8681136101f7578a85995099505050505050505050610206565b8a869950995050505050505050505b915091565b6000808280602001905181019061022291906107a1565b8092508193505050915091565b60405180610180016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000600381111561028757610286610c01565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60006102f76102f284610a58565b610a33565b90508281526020810184848401111561031357610312610c6e565b5b61031e848285610b8e565b509392505050565b600061033961033484610a58565b610a33565b90508281526020810184848401111561035557610354610c6e565b5b610360848285610b9d565b509392505050565b60008135905061037781610ca2565b92915050565b60008151905061038c81610cb9565b92915050565b600082601f8301126103a7576103a6610c5f565b5b81356103b78482602086016102e4565b91505092915050565b600082601f8301126103d5576103d4610c5f565b5b81516103e5848260208601610326565b91505092915050565b6000813590506103fd81610cd0565b92915050565b60008135905061041281610ce7565b92915050565b60008135905061042781610cfe565b92915050565b60008151905061043c81610d0e565b92915050565b6000610180828403121561045957610458610c64565b5b610464610180610a33565b9050600082013567ffffffffffffffff81111561048457610483610c69565b5b61049084828501610392565b600083015250602082013567ffffffffffffffff8111156104b4576104b3610c69565b5b6104c084828501610392565b602083015250604082013567ffffffffffffffff8111156104e4576104e3610c69565b5b6104f084828501610392565b604083015250606082013567ffffffffffffffff81111561051457610513610c69565b5b61052084828501610392565b606083015250608082013567ffffffffffffffff81111561054457610543610c69565b5b61055084828501610392565b60808301525060a082013567ffffffffffffffff81111561057457610573610c69565b5b61058084828501610392565b60a08301525060c082013567ffffffffffffffff8111156105a4576105a3610c69565b5b6105b084828501610392565b60c08301525060e082013567ffffffffffffffff8111156105d4576105d3610c69565b5b6105e084828501610392565b60e0830152506101006105f584828501610418565b6101008301525061012061060b848285016103ee565b6101208301525061014061062184828501610403565b6101408301525061016061063784828501610368565b6101608301525092915050565b60008151905061065381610d25565b92915050565b600080604083850312156106705761066f610c78565b5b600061067e8582860161037d565b925050602061068f8582860161037d565b9150509250929050565b6000602082840312156106af576106ae610c78565b5b600082013567ffffffffffffffff8111156106cd576106cc610c73565b5b6106d984828501610392565b91505092915050565b6000602082840312156106f8576106f7610c78565b5b600082015167ffffffffffffffff81111561071657610715610c73565b5b610722848285016103c0565b91505092915050565b60006020828403121561074157610740610c78565b5b600082013567ffffffffffffffff81111561075f5761075e610c73565b5b61076b84828501610442565b91505092915050565b60006020828403121561078a57610789610c78565b5b600061079884828501610644565b91505092915050565b600080604083850312156107b8576107b7610c78565b5b60006107c685828601610644565b92505060206107d78582860161042d565b9150509250929050565b6107ea81610aa5565b82525050565b6107f981610aa5565b82525050565b600061080a82610a89565b6108148185610a94565b9350610824818560208601610b9d565b61082d81610c7d565b840191505092915050565b61084181610b34565b82525050565b61085081610b46565b82525050565b61085f81610b58565b82525050565b61086e81610b00565b82525050565b600061018083016000830151848203600086015261089282826107ff565b915050602083015184820360208601526108ac82826107ff565b915050604083015184820360408601526108c682826107ff565b915050606083015184820360608601526108e082826107ff565b915050608083015184820360808601526108fa82826107ff565b91505060a083015184820360a086015261091482826107ff565b91505060c083015184820360c086015261092e82826107ff565b91505060e083015184820360e086015261094882826107ff565b91505061010083015161095f610100860182610856565b50610120830151610974610120860182610838565b50610140830151610989610140860182610847565b5061016083015161099e6101608601826107e1565b508091505092915050565b6109b281610b2a565b82525050565b600060208201905081810360008301526109d28184610874565b905092915050565b600060408201905081810360008301526109f48185610874565b9050610a0360208301846107f0565b9392505050565b6000604082019050610a1f60008301856109a9565b610a2c6020830184610865565b9392505050565b6000610a3d610a4e565b9050610a498282610bd0565b919050565b6000604051905090565b600067ffffffffffffffff821115610a7357610a72610c30565b5b610a7c82610c7d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610ab082610b0a565b9050919050565b6000610ac282610b0a565b9050919050565b6000610ad482610aa5565b9050919050565b6000610ae682610aa5565b9050919050565b6000819050610afb82610c8e565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b3f82610b6a565b9050919050565b6000610b5182610b6a565b9050919050565b6000610b6382610aed565b9050919050565b6000610b7582610b7c565b9050919050565b6000610b8782610b0a565b9050919050565b82818337600083830152505050565b60005b83811015610bbb578082015181840152602081019050610ba0565b83811115610bca576000848401525b50505050565b610bd982610c7d565b810181811067ffffffffffffffff82111715610bf857610bf7610c30565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110610c9f57610c9e610c01565b5b50565b610cab81610aa5565b8114610cb657600080fd5b50565b610cc281610ab7565b8114610ccd57600080fd5b50565b610cd981610ac9565b8114610ce457600080fd5b50565b610cf081610adb565b8114610cfb57600080fd5b50565b60048110610d0b57600080fd5b50565b610d1781610b00565b8114610d2257600080fd5b50565b610d2e81610b2a565b8114610d3957600080fd5b5056fea2646970667358221220bfe950a14f55eaa9a5636336d57c006692650b255ebf98a6f7441d682ff6079d64736f6c63430008070033";

export class HighLowWagerModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HighLowWagerModule> {
    return super.deploy(overrides || {}) as Promise<HighLowWagerModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HighLowWagerModule {
    return super.attach(address) as HighLowWagerModule;
  }
  connect(signer: Signer): HighLowWagerModule__factory {
    return super.connect(signer) as HighLowWagerModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HighLowWagerModuleInterface {
    return new utils.Interface(_abi) as HighLowWagerModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HighLowWagerModule {
    return new Contract(address, _abi, signerOrProvider) as HighLowWagerModule;
  }
}
