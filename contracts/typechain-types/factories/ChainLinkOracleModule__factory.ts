/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainLinkOracleModule,
  ChainLinkOracleModuleInterface,
} from "../ChainLinkOracleModule";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplumentalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "getResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610863806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063775a8f5e1461003b578063d4004a3b1461006b575b600080fd5b610055600480360381019061005091906104cd565b61009b565b60405161006291906105ae565b60405180910390f35b61008560048036038101906100809190610484565b6100f8565b60405161009291906105ae565b60405180910390f35b6060602067ffffffffffffffff8111156100b8576100b7610735565b5b6040519080825280601f01601f1916602001820160405280156100ea5781602001600182028036833780820191505090505b509050816020820152919050565b60606000826101200151905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018491906104fa565b5050509150506101938161009b565b92505050919050565b60006101af6101aa846105f5565b6105d0565b9050828152602081018484840111156101cb576101ca610773565b5b6101d68482856106c2565b509392505050565b6000813590506101ed81610793565b92915050565b600082601f83011261020857610207610764565b5b813561021884826020860161019c565b91505092915050565b600081359050610230816107aa565b92915050565b600081359050610245816107c1565b92915050565b60008135905061025a816107d8565b92915050565b60008151905061026f816107e8565b92915050565b6000610160828403121561028c5761028b610769565b5b6102976101606105d0565b9050600082013567ffffffffffffffff8111156102b7576102b661076e565b5b6102c3848285016101f3565b600083015250602082013567ffffffffffffffff8111156102e7576102e661076e565b5b6102f3848285016101f3565b602083015250604082013567ffffffffffffffff8111156103175761031661076e565b5b610323848285016101f3565b604083015250606082013567ffffffffffffffff8111156103475761034661076e565b5b610353848285016101f3565b606083015250608082013567ffffffffffffffff8111156103775761037661076e565b5b610383848285016101f3565b60808301525060a082013567ffffffffffffffff8111156103a7576103a661076e565b5b6103b3848285016101f3565b60a08301525060c06103c78482850161024b565b60c08301525060e06103db84828501610221565b60e0830152506101006103f084828501610236565b61010083015250610120610406848285016101de565b6101208301525061014082013567ffffffffffffffff81111561042c5761042b61076e565b5b610438848285016101f3565b6101408301525092915050565b600081359050610454816107ff565b92915050565b600081519050610469816107ff565b92915050565b60008151905061047e81610816565b92915050565b60006020828403121561049a5761049961077d565b5b600082013567ffffffffffffffff8111156104b8576104b7610778565b5b6104c484828501610275565b91505092915050565b6000602082840312156104e3576104e261077d565b5b60006104f184828501610445565b91505092915050565b600080600080600060a086880312156105165761051561077d565b5b60006105248882890161046f565b955050602061053588828901610260565b94505060406105468882890161045a565b93505060606105578882890161045a565b92505060806105688882890161046f565b9150509295509295909350565b600061058082610626565b61058a8185610631565b935061059a8185602086016106d1565b6105a381610782565b840191505092915050565b600060208201905081810360008301526105c88184610575565b905092915050565b60006105da6105eb565b90506105e68282610704565b919050565b6000604051905090565b600067ffffffffffffffff8211156106105761060f610735565b5b61061982610782565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061064d82610682565b9050919050565b600061065f82610642565b9050919050565b600061067182610642565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156106ef5780820151818401526020810190506106d4565b838111156106fe576000848401525b50505050565b61070d82610782565b810181811067ffffffffffffffff8211171561072c5761072b610735565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079c81610642565b81146107a757600080fd5b50565b6107b381610654565b81146107be57600080fd5b50565b6107ca81610666565b81146107d557600080fd5b50565b600481106107e557600080fd5b50565b6107f181610678565b81146107fc57600080fd5b50565b610808816106a2565b811461081357600080fd5b50565b61081f816106ac565b811461082a57600080fd5b5056fea2646970667358221220f8303fdde61a2cdb95f15ee448b06f37ca6f5616f55b976b276eeeaea4f7250864736f6c63430008070033";

export class ChainLinkOracleModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainLinkOracleModule> {
    return super.deploy(overrides || {}) as Promise<ChainLinkOracleModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainLinkOracleModule {
    return super.attach(address) as ChainLinkOracleModule;
  }
  connect(signer: Signer): ChainLinkOracleModule__factory {
    return super.connect(signer) as ChainLinkOracleModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainLinkOracleModuleInterface {
    return new utils.Interface(_abi) as ChainLinkOracleModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainLinkOracleModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainLinkOracleModule;
  }
}
