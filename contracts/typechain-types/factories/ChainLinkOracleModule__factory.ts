/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainLinkOracleModule,
  ChainLinkOracleModuleInterface,
} from "../ChainLinkOracleModule";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplumentalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "getResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063775a8f5e1461003b578063d4004a3b1461006b575b600080fd5b610055600480360381019061005091906104fa565b61009b565b604051610062919061062e565b60405180910390f35b610085600480360381019061008091906104b1565b6100f8565b604051610092919061062e565b60405180910390f35b6060602067ffffffffffffffff8111156100b8576100b76107b5565b5b6040519080825280601f01601f1916602001820160405280156100ea5781602001600182028036833780820191505090505b509050816020820152919050565b6060600082610120015190506000836080015180602001905181019061011e91906105a2565b5091505060008060008060008673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561017057600080fd5b505afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a89190610527565b945094509450945094506101bb8461009b565b975050505050505050919050565b60006101dc6101d784610675565b610650565b9050828152602081018484840111156101f8576101f76107f3565b5b610203848285610742565b509392505050565b60008135905061021a81610813565b92915050565b600082601f830112610235576102346107e4565b5b81356102458482602086016101c9565b91505092915050565b60008135905061025d8161082a565b92915050565b60008135905061027281610841565b92915050565b60008135905061028781610858565b92915050565b60008151905061029c81610868565b92915050565b600061016082840312156102b9576102b86107e9565b5b6102c4610160610650565b9050600082013567ffffffffffffffff8111156102e4576102e36107ee565b5b6102f084828501610220565b600083015250602082013567ffffffffffffffff811115610314576103136107ee565b5b61032084828501610220565b602083015250604082013567ffffffffffffffff811115610344576103436107ee565b5b61035084828501610220565b604083015250606082013567ffffffffffffffff811115610374576103736107ee565b5b61038084828501610220565b606083015250608082013567ffffffffffffffff8111156103a4576103a36107ee565b5b6103b084828501610220565b60808301525060a082013567ffffffffffffffff8111156103d4576103d36107ee565b5b6103e084828501610220565b60a08301525060c06103f484828501610278565b60c08301525060e06104088482850161024e565b60e08301525061010061041d84828501610263565b610100830152506101206104338482850161020b565b6101208301525061014082013567ffffffffffffffff811115610459576104586107ee565b5b61046584828501610220565b6101408301525092915050565b6000813590506104818161087f565b92915050565b6000815190506104968161087f565b92915050565b6000815190506104ab81610896565b92915050565b6000602082840312156104c7576104c66107fd565b5b600082013567ffffffffffffffff8111156104e5576104e46107f8565b5b6104f1848285016102a2565b91505092915050565b6000602082840312156105105761050f6107fd565b5b600061051e84828501610472565b91505092915050565b600080600080600060a08688031215610543576105426107fd565b5b60006105518882890161049c565b95505060206105628882890161028d565b945050604061057388828901610487565b935050606061058488828901610487565b92505060806105958882890161049c565b9150509295509295909350565b6000806000606084860312156105bb576105ba6107fd565b5b60006105c98682870161049c565b93505060206105da8682870161049c565b92505060406105eb8682870161049c565b9150509250925092565b6000610600826106a6565b61060a81856106b1565b935061061a818560208601610751565b61062381610802565b840191505092915050565b6000602082019050818103600083015261064881846105f5565b905092915050565b600061065a61066b565b90506106668282610784565b919050565b6000604051905090565b600067ffffffffffffffff8211156106905761068f6107b5565b5b61069982610802565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106cd82610702565b9050919050565b60006106df826106c2565b9050919050565b60006106f1826106c2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561076f578082015181840152602081019050610754565b8381111561077e576000848401525b50505050565b61078d82610802565b810181811067ffffffffffffffff821117156107ac576107ab6107b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61081c816106c2565b811461082757600080fd5b50565b610833816106d4565b811461083e57600080fd5b50565b61084a816106e6565b811461085557600080fd5b50565b6004811061086557600080fd5b50565b610871816106f8565b811461087c57600080fd5b50565b61088881610722565b811461089357600080fd5b50565b61089f8161072c565b81146108aa57600080fd5b5056fea2646970667358221220de93781fa1e495264e32d6f89556b79c26e396c3e5d3b17718bfb4952459b07064736f6c63430008070033";

export class ChainLinkOracleModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainLinkOracleModule> {
    return super.deploy(overrides || {}) as Promise<ChainLinkOracleModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainLinkOracleModule {
    return super.attach(address) as ChainLinkOracleModule;
  }
  connect(signer: Signer): ChainLinkOracleModule__factory {
    return super.connect(signer) as ChainLinkOracleModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainLinkOracleModuleInterface {
    return new utils.Interface(_abi) as ChainLinkOracleModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainLinkOracleModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainLinkOracleModule;
  }
}
