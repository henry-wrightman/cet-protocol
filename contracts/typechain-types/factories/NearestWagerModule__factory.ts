/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NearestWagerModule,
  NearestWagerModuleInterface,
} from "../NearestWagerModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeNearestWager",
    outputs: [
      {
        internalType: "uint256",
        name: "wagerPrice",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610daf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806361e347f21461003b57806394d3ced71461006b575b600080fd5b61005560048036038101906100509190610687565b61009c565b60405161006291906109a9565b60405180910390f35b61008560048036038101906100809190610719565b6100b9565b604051610093929190610979565b60405180910390f35b6000818060200190518101906100b29190610762565b9050919050565b6100c1610232565b60008083610140015173ffffffffffffffffffffffffffffffffffffffff1663a03f85c7856040518263ffffffff1660e01b81526004016101029190610957565b600060405180830381600087803b15801561011c57600080fd5b505af1158015610130573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061015991906106d0565b9050808460e0018190525060008180602001905181019061017a9190610762565b9050600080600087600001518060200190518101906101999190610647565b9150915060006101ac896020015161009c565b905060006101bd8a6040015161009c565b905060006101d583886101d09190610a36565b610216565b905060006101ed83896101e89190610a36565b610216565b90508082116101fe57859650610202565b8496505b8b879a509a50505050505050505050915091565b600080821215610229578160000361022b565b815b9050919050565b60405180610180016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000600381111561028a57610289610c55565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60006102fa6102f5846109e9565b6109c4565b90508281526020810184848401111561031657610315610cc2565b5b610321848285610bb3565b509392505050565b600061033c610337846109e9565b6109c4565b90508281526020810184848401111561035857610357610cc2565b5b610363848285610bc2565b509392505050565b60008135905061037a81610cf6565b92915050565b60008151905061038f81610d0d565b92915050565b600082601f8301126103aa576103a9610cb3565b5b81356103ba8482602086016102e7565b91505092915050565b600082601f8301126103d8576103d7610cb3565b5b81516103e8848260208601610329565b91505092915050565b60008135905061040081610d24565b92915050565b60008135905061041581610d3b565b92915050565b60008135905061042a81610d52565b92915050565b6000610180828403121561044757610446610cb8565b5b6104526101806109c4565b9050600082013567ffffffffffffffff81111561047257610471610cbd565b5b61047e84828501610395565b600083015250602082013567ffffffffffffffff8111156104a2576104a1610cbd565b5b6104ae84828501610395565b602083015250604082013567ffffffffffffffff8111156104d2576104d1610cbd565b5b6104de84828501610395565b604083015250606082013567ffffffffffffffff81111561050257610501610cbd565b5b61050e84828501610395565b606083015250608082013567ffffffffffffffff81111561053257610531610cbd565b5b61053e84828501610395565b60808301525060a082013567ffffffffffffffff81111561056257610561610cbd565b5b61056e84828501610395565b60a08301525060c082013567ffffffffffffffff81111561059257610591610cbd565b5b61059e84828501610395565b60c08301525060e082013567ffffffffffffffff8111156105c2576105c1610cbd565b5b6105ce84828501610395565b60e0830152506101006105e38482850161041b565b610100830152506101206105f9848285016103f1565b6101208301525061014061060f84828501610406565b610140830152506101606106258482850161036b565b6101608301525092915050565b60008151905061064181610d62565b92915050565b6000806040838503121561065e5761065d610ccc565b5b600061066c85828601610380565b925050602061067d85828601610380565b9150509250929050565b60006020828403121561069d5761069c610ccc565b5b600082013567ffffffffffffffff8111156106bb576106ba610cc7565b5b6106c784828501610395565b91505092915050565b6000602082840312156106e6576106e5610ccc565b5b600082015167ffffffffffffffff81111561070457610703610cc7565b5b610710848285016103c3565b91505092915050565b60006020828403121561072f5761072e610ccc565b5b600082013567ffffffffffffffff81111561074d5761074c610cc7565b5b61075984828501610430565b91505092915050565b60006020828403121561077857610777610ccc565b5b600061078684828501610632565b91505092915050565b61079881610aca565b82525050565b6107a781610aca565b82525050565b60006107b882610a1a565b6107c28185610a25565b93506107d2818560208601610bc2565b6107db81610cd1565b840191505092915050565b6107ef81610b59565b82525050565b6107fe81610b6b565b82525050565b61080d81610b7d565b82525050565b600061018083016000830151848203600086015261083182826107ad565b9150506020830151848203602086015261084b82826107ad565b9150506040830151848203604086015261086582826107ad565b9150506060830151848203606086015261087f82826107ad565b9150506080830151848203608086015261089982826107ad565b91505060a083015184820360a08601526108b382826107ad565b91505060c083015184820360c08601526108cd82826107ad565b91505060e083015184820360e08601526108e782826107ad565b9150506101008301516108fe610100860182610804565b506101208301516109136101208601826107e6565b506101408301516109286101408601826107f5565b5061016083015161093d61016086018261078f565b508091505092915050565b61095181610b4f565b82525050565b600060208201905081810360008301526109718184610813565b905092915050565b600060408201905081810360008301526109938185610813565b90506109a2602083018461079e565b9392505050565b60006020820190506109be6000830184610948565b92915050565b60006109ce6109df565b90506109da8282610bf5565b919050565b6000604051905090565b600067ffffffffffffffff821115610a0457610a03610c84565b5b610a0d82610cd1565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a4182610b25565b9150610a4c83610b25565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610a8757610a86610c26565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610abf57610abe610c26565b5b828203905092915050565b6000610ad582610b2f565b9050919050565b6000610ae782610b2f565b9050919050565b6000610af982610aca565b9050919050565b6000610b0b82610aca565b9050919050565b6000819050610b2082610ce2565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b6482610b8f565b9050919050565b6000610b7682610b8f565b9050919050565b6000610b8882610b12565b9050919050565b6000610b9a82610ba1565b9050919050565b6000610bac82610b2f565b9050919050565b82818337600083830152505050565b60005b83811015610be0578082015181840152602081019050610bc5565b83811115610bef576000848401525b50505050565b610bfe82610cd1565b810181811067ffffffffffffffff82111715610c1d57610c1c610c84565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110610cf357610cf2610c55565b5b50565b610cff81610aca565b8114610d0a57600080fd5b50565b610d1681610adc565b8114610d2157600080fd5b50565b610d2d81610aee565b8114610d3857600080fd5b50565b610d4481610b00565b8114610d4f57600080fd5b50565b60048110610d5f57600080fd5b50565b610d6b81610b4f565b8114610d7657600080fd5b5056fea26469706673582212206fa09fe7a98ce99362cd36c9de7ba1ad2b5be160a345eca02ca0a76b29b730cd64736f6c63430008070033";

export class NearestWagerModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NearestWagerModule> {
    return super.deploy(overrides || {}) as Promise<NearestWagerModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NearestWagerModule {
    return super.attach(address) as NearestWagerModule;
  }
  connect(signer: Signer): NearestWagerModule__factory {
    return super.connect(signer) as NearestWagerModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NearestWagerModuleInterface {
    return new utils.Interface(_abi) as NearestWagerModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NearestWagerModule {
    return new Contract(address, _abi, signerOrProvider) as NearestWagerModule;
  }
}
