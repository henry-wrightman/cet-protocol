/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestChainLinkOracle,
  TestChainLinkOracleInterface,
} from "../TestChainLinkOracle";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplumentalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "getResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261520860005534801561001657600080fd5b506107b8806100266000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063775a8f5e14610051578063a035b1fe14610081578063d4004a3b1461009f578063f7a30806146100cf575b600080fd5b61006b600480360381019061006691906104a0565b6100eb565b6040516100789190610515565b60405180910390f35b610089610148565b6040516100969190610537565b60405180910390f35b6100b960048036038101906100b49190610457565b61014e565b6040516100c69190610515565b60405180910390f35b6100e960048036038101906100e4919061042a565b610162565b005b6060602067ffffffffffffffff811115610108576101076106a1565b5b6040519080825280601f01601f19166020018201604052801561013a5781602001600182028036833780820191505090505b509050816020820152919050565b60005481565b606061015b6000546100eb565b9050919050565b8060008190555050565b600061017f61017a84610577565b610552565b90508281526020810184848401111561019b5761019a6106df565b5b6101a684828561062e565b509392505050565b6000813590506101bd816106ff565b92915050565b600082601f8301126101d8576101d76106d0565b5b81356101e884826020860161016c565b91505092915050565b60008135905061020081610716565b92915050565b6000813590506102158161072d565b92915050565b60008135905061022a81610744565b92915050565b60008135905061023f81610754565b92915050565b6000610160828403121561025c5761025b6106d5565b5b610267610160610552565b9050600082013567ffffffffffffffff811115610287576102866106da565b5b610293848285016101c3565b600083015250602082013567ffffffffffffffff8111156102b7576102b66106da565b5b6102c3848285016101c3565b602083015250604082013567ffffffffffffffff8111156102e7576102e66106da565b5b6102f3848285016101c3565b604083015250606082013567ffffffffffffffff811115610317576103166106da565b5b610323848285016101c3565b606083015250608082013567ffffffffffffffff811115610347576103466106da565b5b610353848285016101c3565b60808301525060a082013567ffffffffffffffff811115610377576103766106da565b5b610383848285016101c3565b60a08301525060c06103978482850161021b565b60c08301525060e06103ab848285016101f1565b60e0830152506101006103c084828501610206565b610100830152506101206103d6848285016101ae565b6101208301525061014082013567ffffffffffffffff8111156103fc576103fb6106da565b5b610408848285016101c3565b6101408301525092915050565b6000813590506104248161076b565b92915050565b6000602082840312156104405761043f6106e9565b5b600061044e84828501610230565b91505092915050565b60006020828403121561046d5761046c6106e9565b5b600082013567ffffffffffffffff81111561048b5761048a6106e4565b5b61049784828501610245565b91505092915050565b6000602082840312156104b6576104b56106e9565b5b60006104c484828501610415565b91505092915050565b60006104d8826105a8565b6104e281856105b3565b93506104f281856020860161063d565b6104fb816106ee565b840191505092915050565b61050f816105fa565b82525050565b6000602082019050818103600083015261052f81846104cd565b905092915050565b600060208201905061054c6000830184610506565b92915050565b600061055c61056d565b90506105688282610670565b919050565b6000604051905090565b600067ffffffffffffffff821115610592576105916106a1565b5b61059b826106ee565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006105cf82610604565b9050919050565b60006105e1826105c4565b9050919050565b60006105f3826105c4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561065b578082015181840152602081019050610640565b8381111561066a576000848401525b50505050565b610679826106ee565b810181811067ffffffffffffffff82111715610698576106976106a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610708816105c4565b811461071357600080fd5b50565b61071f816105d6565b811461072a57600080fd5b50565b610736816105e8565b811461074157600080fd5b50565b6004811061075157600080fd5b50565b61075d816105fa565b811461076857600080fd5b50565b61077481610624565b811461077f57600080fd5b5056fea2646970667358221220ea0511a7195603e2d39f792a6dd441bce06b660d59d974f6cc257f1b2fdc9c7264736f6c63430008070033";

export class TestChainLinkOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestChainLinkOracle> {
    return super.deploy(overrides || {}) as Promise<TestChainLinkOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestChainLinkOracle {
    return super.attach(address) as TestChainLinkOracle;
  }
  connect(signer: Signer): TestChainLinkOracle__factory {
    return super.connect(signer) as TestChainLinkOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestChainLinkOracleInterface {
    return new utils.Interface(_abi) as TestChainLinkOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestChainLinkOracle {
    return new Contract(address, _abi, signerOrProvider) as TestChainLinkOracle;
  }
}
