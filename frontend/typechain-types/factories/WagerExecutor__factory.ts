/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WagerExecutor, WagerExecutorInterface } from "../WagerExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610787380380610787833981810160405281019061003291906100ba565b8160808181525050436002819055506000808190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610169565b60008151905061009f8161013b565b92915050565b6000815190506100b481610152565b92915050565b600080604083850312156100d1576100d0610136565b5b60006100df858286016100a5565b92505060206100f085828601610090565b9150509250929050565b60006101058261010c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610144816100fa565b811461014f57600080fd5b50565b61015b8161012c565b811461016657600080fd5b50565b6080516105f56101926000396000818161012e01528181610188015261028501526105f56000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634585e33b146100675780636e04ff0d146100835780637b103999146100b4578063806b984f146100d2578063947a36fb146100f0578063b21f45171461010e575b600080fd5b610081600480360381019061007c9190610303565b61012c565b005b61009d60048036038101906100989190610303565b610182565b6040516100ab9291906103d1565b60405180910390f35b6100bc610257565b6040516100c991906103b6565b60405180910390f35b6100da61027d565b6040516100e79190610401565b60405180910390f35b6100f8610283565b6040516101059190610401565b60405180910390f35b6101166102a7565b6040516101239190610401565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006002544361015b91906104b7565b111561017e574360028190555060016000546101779190610461565b6000819055505b5050565b600060607f0000000000000000000000000000000000000000000000000000000000000000600254436101b591906104b7565b119150811561025057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0030911600254436040518363ffffffff1660e01b815260040161021d92919061041c565b600060405180830381600087803b15801561023757600080fd5b505af115801561024b573d6000803e3d6000fd5b505050505b9250929050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b60008083601f8401126102c3576102c261059a565b5b8235905067ffffffffffffffff8111156102e0576102df610595565b5b6020830191508360018202830111156102fc576102fb61059f565b5b9250929050565b6000806020838503121561031a576103196105a9565b5b600083013567ffffffffffffffff811115610338576103376105a4565b5b610344858286016102ad565b92509250509250929050565b610359816104eb565b82525050565b610368816104fd565b82525050565b600061037982610445565b6103838185610450565b9350610393818560208601610533565b61039c816105ae565b840191505092915050565b6103b081610529565b82525050565b60006020820190506103cb6000830184610350565b92915050565b60006040820190506103e6600083018561035f565b81810360208301526103f8818461036e565b90509392505050565b600060208201905061041660008301846103a7565b92915050565b600060408201905061043160008301856103a7565b61043e60208301846103a7565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061046c82610529565b915061047783610529565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104ac576104ab610566565b5b828201905092915050565b60006104c282610529565b91506104cd83610529565b9250828210156104e0576104df610566565b5b828203905092915050565b60006104f682610509565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610551578082015181840152602081019050610536565b83811115610560576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea2646970667358221220f208f53112db7088de4a4e4cffde9fdff3b3c1affc14b3ff344b696fc9a2fd7064736f6c63430008070033";

export class WagerExecutor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    updateInterval: BigNumberish,
    registryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WagerExecutor> {
    return super.deploy(
      updateInterval,
      registryAddress,
      overrides || {}
    ) as Promise<WagerExecutor>;
  }
  getDeployTransaction(
    updateInterval: BigNumberish,
    registryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      updateInterval,
      registryAddress,
      overrides || {}
    );
  }
  attach(address: string): WagerExecutor {
    return super.attach(address) as WagerExecutor;
  }
  connect(signer: Signer): WagerExecutor__factory {
    return super.connect(signer) as WagerExecutor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WagerExecutorInterface {
    return new utils.Interface(_abi) as WagerExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WagerExecutor {
    return new Contract(address, _abi, signerOrProvider) as WagerExecutor;
  }
}
