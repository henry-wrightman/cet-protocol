/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HighLowWagerModule,
  HighLowWagerModuleInterface,
} from "../HighLowWagerModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeHighLowWager",
    outputs: [
      {
        internalType: "uint256",
        name: "wagerDirection",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "initialPrice",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplementalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "equityData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracleModule",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "supplementalOracleData",
            type: "bytes",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bf4d8a8a1461003b578063ca7ddc311461006c575b600080fd5b610055600480360381019061005091906106ec565b61009d565b60405161006392919061097f565b60405180910390f35b6100866004803603810190610081919061065a565b610205565b6040516100949291906109af565b60405180910390f35b6100a5610229565b60008083610100015173ffffffffffffffffffffffffffffffffffffffff1663d4004a3b856040518263ffffffff1660e01b81526004016100e6919061095d565b600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013d91906106a3565b9050808460a0018190525060008180602001905181019061015e9190610735565b9050600080866000015180602001905181019061017b919061061a565b9150915060008061018f8960200151610205565b9150915060006101a28a60400151610205565b91505060018314156101d9578582136101c75789859850985050505050505050610200565b89849850985050505050505050610200565b8581136101f25789849850985050505050505050610200565b898598509850505050505050505b915091565b6000808280602001905181019061021c9190610762565b8092508193505050915091565b6040518061016001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016000600381111561027357610272610ba6565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b60006102ea6102e5846109fd565b6109d8565b90508281526020810184848401111561030657610305610c13565b5b610311848285610b33565b509392505050565b600061032c610327846109fd565b6109d8565b90508281526020810184848401111561034857610347610c13565b5b610353848285610b42565b509392505050565b60008135905061036a81610c47565b92915050565b60008151905061037f81610c5e565b92915050565b600082601f83011261039a57610399610c04565b5b81356103aa8482602086016102d7565b91505092915050565b600082601f8301126103c8576103c7610c04565b5b81516103d8848260208601610319565b91505092915050565b6000813590506103f081610c75565b92915050565b60008135905061040581610c8c565b92915050565b60008135905061041a81610ca3565b92915050565b60008151905061042f81610cb3565b92915050565b6000610160828403121561044c5761044b610c09565b5b6104576101606109d8565b9050600082013567ffffffffffffffff81111561047757610476610c0e565b5b61048384828501610385565b600083015250602082013567ffffffffffffffff8111156104a7576104a6610c0e565b5b6104b384828501610385565b602083015250604082013567ffffffffffffffff8111156104d7576104d6610c0e565b5b6104e384828501610385565b604083015250606082013567ffffffffffffffff81111561050757610506610c0e565b5b61051384828501610385565b606083015250608082013567ffffffffffffffff81111561053757610536610c0e565b5b61054384828501610385565b60808301525060a082013567ffffffffffffffff81111561056757610566610c0e565b5b61057384828501610385565b60a08301525060c06105878482850161040b565b60c08301525060e061059b848285016103e1565b60e0830152506101006105b0848285016103f6565b610100830152506101206105c68482850161035b565b6101208301525061014082013567ffffffffffffffff8111156105ec576105eb610c0e565b5b6105f884828501610385565b6101408301525092915050565b60008151905061061481610cca565b92915050565b6000806040838503121561063157610630610c1d565b5b600061063f85828601610370565b925050602061065085828601610370565b9150509250929050565b6000602082840312156106705761066f610c1d565b5b600082013567ffffffffffffffff81111561068e5761068d610c18565b5b61069a84828501610385565b91505092915050565b6000602082840312156106b9576106b8610c1d565b5b600082015167ffffffffffffffff8111156106d7576106d6610c18565b5b6106e3848285016103b3565b91505092915050565b60006020828403121561070257610701610c1d565b5b600082013567ffffffffffffffff8111156107205761071f610c18565b5b61072c84828501610435565b91505092915050565b60006020828403121561074b5761074a610c1d565b5b600061075984828501610605565b91505092915050565b6000806040838503121561077957610778610c1d565b5b600061078785828601610605565b925050602061079885828601610420565b9150509250929050565b6107ab81610a4a565b82525050565b6107ba81610a4a565b82525050565b60006107cb82610a2e565b6107d58185610a39565b93506107e5818560208601610b42565b6107ee81610c22565b840191505092915050565b61080281610ad9565b82525050565b61081181610aeb565b82525050565b61082081610afd565b82525050565b61082f81610aa5565b82525050565b600061016083016000830151848203600086015261085382826107c0565b9150506020830151848203602086015261086d82826107c0565b9150506040830151848203604086015261088782826107c0565b915050606083015184820360608601526108a182826107c0565b915050608083015184820360808601526108bb82826107c0565b91505060a083015184820360a08601526108d582826107c0565b91505060c08301516108ea60c0860182610817565b5060e08301516108fd60e08601826107f9565b50610100830151610912610100860182610808565b506101208301516109276101208601826107a2565b5061014083015184820361014086015261094182826107c0565b9150508091505092915050565b61095781610acf565b82525050565b600060208201905081810360008301526109778184610835565b905092915050565b600060408201905081810360008301526109998185610835565b90506109a860208301846107b1565b9392505050565b60006040820190506109c4600083018561094e565b6109d16020830184610826565b9392505050565b60006109e26109f3565b90506109ee8282610b75565b919050565b6000604051905090565b600067ffffffffffffffff821115610a1857610a17610bd5565b5b610a2182610c22565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a5582610aaf565b9050919050565b6000610a6782610aaf565b9050919050565b6000610a7982610a4a565b9050919050565b6000610a8b82610a4a565b9050919050565b6000819050610aa082610c33565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae482610b0f565b9050919050565b6000610af682610b0f565b9050919050565b6000610b0882610a92565b9050919050565b6000610b1a82610b21565b9050919050565b6000610b2c82610aaf565b9050919050565b82818337600083830152505050565b60005b83811015610b60578082015181840152602081019050610b45565b83811115610b6f576000848401525b50505050565b610b7e82610c22565b810181811067ffffffffffffffff82111715610b9d57610b9c610bd5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110610c4457610c43610ba6565b5b50565b610c5081610a4a565b8114610c5b57600080fd5b50565b610c6781610a5c565b8114610c7257600080fd5b50565b610c7e81610a6e565b8114610c8957600080fd5b50565b610c9581610a80565b8114610ca057600080fd5b50565b60048110610cb057600080fd5b50565b610cbc81610aa5565b8114610cc757600080fd5b50565b610cd381610acf565b8114610cde57600080fd5b5056fea2646970667358221220817dac99f988e474e227c65fd1d59f1c2e1b61c20e85ba09f117ee6a8a14649264736f6c63430008070033";

export class HighLowWagerModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HighLowWagerModule> {
    return super.deploy(overrides || {}) as Promise<HighLowWagerModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HighLowWagerModule {
    return super.attach(address) as HighLowWagerModule;
  }
  connect(signer: Signer): HighLowWagerModule__factory {
    return super.connect(signer) as HighLowWagerModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HighLowWagerModuleInterface {
    return new utils.Interface(_abi) as HighLowWagerModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HighLowWagerModule {
    return new Contract(address, _abi, signerOrProvider) as HighLowWagerModule;
  }
}
