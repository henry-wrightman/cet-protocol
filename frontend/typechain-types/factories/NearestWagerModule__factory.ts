/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NearestWagerModule,
  NearestWagerModuleInterface,
} from "../NearestWagerModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeNearestWager",
    outputs: [
      {
        internalType: "uint256",
        name: "wagerPrice",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "wagerAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "wager",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "parties",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyOneWagerData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "partyTwoWagerData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "wagerAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "blockData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "wagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "supplumentalWagerOracleData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "result",
            type: "bytes",
          },
          {
            internalType: "enum WagerState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IWagerModule",
            name: "wagerModule",
            type: "address",
          },
          {
            internalType: "contract IWagerOracle",
            name: "oracleModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleSource",
            type: "address",
          },
        ],
        internalType: "struct Wager",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610db0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806348d4a73d1461003b57806361e347f21461006c575b600080fd5b61005560048036038101906100509190610712565b61009c565b60405161006392919061097a565b60405180910390f35b61008660048036038101906100819190610680565b6101f9565b60405161009391906109aa565b60405180910390f35b6100a4610232565b60008083610140015173ffffffffffffffffffffffffffffffffffffffff166316f6a3a1856040518263ffffffff1660e01b81526004016100e59190610958565b600060405180830381600087803b1580156100ff57600080fd5b505af1158015610113573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013c91906106c9565b9050808460e0018190525060008180602001905181019061015d919061075b565b90506000806000876000015180602001905181019061017c9190610640565b91509150600061018f89602001516101f9565b905060006101a08a604001516101f9565b905060006101b883886101b39190610a37565b610216565b905060006101d083896101cb9190610a37565b610216565b90508082116101e1578596506101e5565b8496505b8b879a509a50505050505050505050915091565b60008180602001905181019061020f919061075b565b9050919050565b600080821215610229578160000361022b565b815b9050919050565b60405180610180016040528060608152602001606081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016000600381111561028a57610289610c56565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60006102fa6102f5846109ea565b6109c5565b90508281526020810184848401111561031657610315610cc3565b5b610321848285610bb4565b509392505050565b600061033c610337846109ea565b6109c5565b90508281526020810184848401111561035857610357610cc3565b5b610363848285610bc3565b509392505050565b60008135905061037a81610cf7565b92915050565b60008151905061038f81610d0e565b92915050565b600082601f8301126103aa576103a9610cb4565b5b81356103ba8482602086016102e7565b91505092915050565b600082601f8301126103d8576103d7610cb4565b5b81516103e8848260208601610329565b91505092915050565b60008135905061040081610d25565b92915050565b60008135905061041581610d3c565b92915050565b60008135905061042a81610d53565b92915050565b6000610180828403121561044757610446610cb9565b5b6104526101806109c5565b9050600082013567ffffffffffffffff81111561047257610471610cbe565b5b61047e84828501610395565b600083015250602082013567ffffffffffffffff8111156104a2576104a1610cbe565b5b6104ae84828501610395565b602083015250604082013567ffffffffffffffff8111156104d2576104d1610cbe565b5b6104de84828501610395565b60408301525060606104f284828501610616565b606083015250608082013567ffffffffffffffff81111561051657610515610cbe565b5b61052284828501610395565b60808301525060a082013567ffffffffffffffff81111561054657610545610cbe565b5b61055284828501610395565b60a08301525060c082013567ffffffffffffffff81111561057657610575610cbe565b5b61058284828501610395565b60c08301525060e082013567ffffffffffffffff8111156105a6576105a5610cbe565b5b6105b284828501610395565b60e0830152506101006105c78482850161041b565b610100830152506101206105dd848285016103f1565b610120830152506101406105f384828501610406565b610140830152506101606106098482850161036b565b6101608301525092915050565b60008135905061062581610d63565b92915050565b60008151905061063a81610d63565b92915050565b6000806040838503121561065757610656610ccd565b5b600061066585828601610380565b925050602061067685828601610380565b9150509250929050565b60006020828403121561069657610695610ccd565b5b600082013567ffffffffffffffff8111156106b4576106b3610cc8565b5b6106c084828501610395565b91505092915050565b6000602082840312156106df576106de610ccd565b5b600082015167ffffffffffffffff8111156106fd576106fc610cc8565b5b610709848285016103c3565b91505092915050565b60006020828403121561072857610727610ccd565b5b600082013567ffffffffffffffff81111561074657610745610cc8565b5b61075284828501610430565b91505092915050565b60006020828403121561077157610770610ccd565b5b600061077f8482850161062b565b91505092915050565b61079181610acb565b82525050565b6107a081610acb565b82525050565b60006107b182610a1b565b6107bb8185610a26565b93506107cb818560208601610bc3565b6107d481610cd2565b840191505092915050565b6107e881610b5a565b82525050565b6107f781610b6c565b82525050565b61080681610b7e565b82525050565b600061018083016000830151848203600086015261082a82826107a6565b9150506020830151848203602086015261084482826107a6565b9150506040830151848203604086015261085e82826107a6565b9150506060830151610873606086018261093a565b506080830151848203608086015261088b82826107a6565b91505060a083015184820360a08601526108a582826107a6565b91505060c083015184820360c08601526108bf82826107a6565b91505060e083015184820360e08601526108d982826107a6565b9150506101008301516108f06101008601826107fd565b506101208301516109056101208601826107df565b5061014083015161091a6101408601826107ee565b5061016083015161092f610160860182610788565b508091505092915050565b61094381610b50565b82525050565b61095281610b50565b82525050565b60006020820190508181036000830152610972818461080c565b905092915050565b60006040820190508181036000830152610994818561080c565b90506109a36020830184610797565b9392505050565b60006020820190506109bf6000830184610949565b92915050565b60006109cf6109e0565b90506109db8282610bf6565b919050565b6000604051905090565b600067ffffffffffffffff821115610a0557610a04610c85565b5b610a0e82610cd2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a4282610b26565b9150610a4d83610b26565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610a8857610a87610c27565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610ac057610abf610c27565b5b828203905092915050565b6000610ad682610b30565b9050919050565b6000610ae882610b30565b9050919050565b6000610afa82610acb565b9050919050565b6000610b0c82610acb565b9050919050565b6000819050610b2182610ce3565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b6582610b90565b9050919050565b6000610b7782610b90565b9050919050565b6000610b8982610b13565b9050919050565b6000610b9b82610ba2565b9050919050565b6000610bad82610b30565b9050919050565b82818337600083830152505050565b60005b83811015610be1578082015181840152602081019050610bc6565b83811115610bf0576000848401525b50505050565b610bff82610cd2565b810181811067ffffffffffffffff82111715610c1e57610c1d610c85565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110610cf457610cf3610c56565b5b50565b610d0081610acb565b8114610d0b57600080fd5b50565b610d1781610add565b8114610d2257600080fd5b50565b610d2e81610aef565b8114610d3957600080fd5b50565b610d4581610b01565b8114610d5057600080fd5b50565b60048110610d6057600080fd5b50565b610d6c81610b50565b8114610d7757600080fd5b5056fea26469706673582212204aa771a8ff4369670a885ab1e7288c5bdce0501ef635a76c63b2525f8cbb6a6264736f6c63430008070033";

export class NearestWagerModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NearestWagerModule> {
    return super.deploy(overrides || {}) as Promise<NearestWagerModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NearestWagerModule {
    return super.attach(address) as NearestWagerModule;
  }
  connect(signer: Signer): NearestWagerModule__factory {
    return super.connect(signer) as NearestWagerModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NearestWagerModuleInterface {
    return new utils.Interface(_abi) as NearestWagerModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NearestWagerModule {
    return new Contract(address, _abi, signerOrProvider) as NearestWagerModule;
  }
}
